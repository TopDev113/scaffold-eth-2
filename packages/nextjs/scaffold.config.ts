import { Abi } from "abitype";
import * as chains from "wagmi/chains";
// If you don't use custom contracts for this SE-2 app:
// - Remove the import line below
// - Set "contracts: null" in the scaffoldConfig below
import contracts from "~~/generated/hardhat_contracts";

export type ScaffoldConfig = {
  targetNetwork: chains.Chain;
  pollingInterval: number;
  alchemyApiKey: string;
  contracts: null | {
    [key: number]: readonly {
      name: string;
      chainId: string;
      contracts: {
        [key: string]: {
          address: string;
          abi: Abi;
        };
      };
    }[];
  };
};

const scaffoldConfig = {
  // The network where your DApp lives in
  targetNetwork: chains.hardhat,

  // The interval at which your front-end polls the RPC servers for new data
  // it has no effect on the local network
  pollingInterval: 30000,

  // This is ours Alchemy's default API key.
  // You can get your own at https://dashboard.alchemyapi.io
  // It's recommended to store it in an env variable:
  // .env.local for local testing, and in the Vercel/system env config for live apps.
  alchemyApiKey: process.env.NEXT_PUBLIC_ALCHEMY_API_KEY || "oKxs-03sij-U_N0iOlrSsZFr29-IqbuF",

  // This is the contract data that was generated by "yarn deploy", or set it to null if no local contracts are used
  contracts,
} satisfies ScaffoldConfig;

export default scaffoldConfig;
